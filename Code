library(tidyverse)
library(dplyr)
library(modelr)
library(readxl)
library(ggrepel)
library(reshape2)


# ---- Apertura Datasets (Valentín) ---- 

circuits <- read_csv("F://formula1//circuits.csv") 
constructor_results <- read_csv("F://formula1//constructor_results.csv")
constructor_standings <- read_csv("F://formula1//constructor_standings.csv")
constructors <- read_csv("F://formula1//constructors.csv")
driver_standings <- read_csv("F://formula1//driver_standings.csv")
drivers <- read_csv("F://formula1//drivers.csv")
lap_times <- read_csv("F://formula1//lap_times.csv")
pit_stops <- read_csv("F://formula1//pit_stops.csv")
qualifying <- read_csv("F://formula1//qualifying.csv")
races <- read_csv("F://formula1//races.csv")
results <- read_csv("F://formula1//results.csv")
seasons <- read_csv("F://formula1//seasons.csv")
sprint_results <- read_csv("F://formula1//sprint_results.csv")
status <- read_csv("F://formula1//status.csv")
championships <- read_excel("F://formula1//championships.xlsx")


# ---- Modificamos y agrupamos Datasets ---- 


# raceId + Circuit_name
RACE_ID <- races %>% summarise(raceId, round, circuit_name = name, date, url)
  
# driverId + name
DRIVER_ID <- drivers %>% mutate(name = paste(forename, surname, sep = " ")) %>%
             select(driverId, name)
  
  
# constructorId + constructor_name
CONSTRUCTOR_ID <- constructors %>% summarise(constructorId, constructor_name = name)
  

# agregamos a CONSTRUCTOR_RESULT ---> 'constructor_name' + 'race_name'
constructor_results <- left_join(constructor_results, CONSTRUCTOR_ID, by= 'constructorId') %>% 
                       left_join(RACE_ID, by= 'raceId') %>% 
                       summarise(constructorResultsId, raceId, circuit_name, constructorId,  
                                 constructor_name,points, status, date) 

# agregamos a DRIVERS la variable 'name'
drivers <-  left_join(drivers,DRIVER_ID, by= 'driverId') %>% 
            summarise(driverId,driverRef,number,code,name,dob,nationality,url)


# modificamos LAP_TIMES
lap_times <- left_join(lap_times, RACE_ID, by='raceId') %>% 
             left_join(DRIVER_ID, by='driverId') %>% 
             summarise(raceId, circuit_name, driverId, name, lap, position,time,milliseconds)


#modificamos RESULTS
results <- left_join(results, RACE_ID, by='raceId') %>% 
           left_join(DRIVER_ID, by='driverId') %>% 
           left_join(CONSTRUCTOR_ID, by='constructorId') %>%
           left_join(status, by='statusId') %>%
           summarise(resultId,raceId, circuit_name,driverId, name, constructorId,constructor_name, 
            number, grid, position, positionText, positionOrder, points, laps, time,            
            milliseconds,fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId, status, date)

#modificamos pit_stops 
pit_stops <- left_join(pit_stops, RACE_ID, by='raceId') %>% 
  left_join(DRIVER_ID, by='driverId') %>%
  summarise(raceId,circuit_name, driverId, name,stop,lap,time,duration,milliseconds,time, date)

#modificamos CONSTRUCTOR_STANDINGS  
constructor_standings <- left_join(constructor_standings, RACE_ID, by='raceId') %>% 
                         left_join( CONSTRUCTOR_ID, by='constructorId') %>%
                         summarise(constructorStandingsId, raceId, circuit_name, constructorId,           
                                   constructor_name, points,position,positionText,wins, date)
 
#modificamos DRIVER_STANDINGS  
driver_standings <- left_join(driver_standings, RACE_ID, by='raceId') %>% 
                    left_join(DRIVER_ID, by='driverId') %>%
                    summarise(driverStandingsId, raceId, circuit_name, driverId,name, 
                              points,position,positionText,wins, date)



#modificamos qualifying
qualifying <- left_join(qualifying, RACE_ID, by='raceId') %>% 
  left_join(DRIVER_ID, by='driverId') %>% 
  left_join(CONSTRUCTOR_ID, by='constructorId') %>%
  summarise(qualifyId,raceId,circuit_name, driverId, name,constructorId, constructor_name, 
            number,position, q1, q2, q3, date)


#modificamos sprint_results
sprint_results <- left_join(sprint_results, RACE_ID, by='raceId') %>% 
  left_join(DRIVER_ID, by='driverId') %>% 
  left_join(CONSTRUCTOR_ID, by='constructorId') %>%
  summarise(resultId, raceId, circuit_name,driverId, name,constructorId,constructor_name,
            number,grid, position,positionText, positionOrder, points, laps, time, milliseconds,   
            fastestLap,fastestLapTime,statusId, date)



# ---- Agregamos sextiles ----

cantidad <- results %>% group_by(raceId) %>% count()

cantidad <- left_join(cantidad, races, by='raceId') %>% summarise(raceId, circuit_name = name,
                                                                  n, q1 = round(n * 1 / 6, 0), q2 = round(n * 2 / 6, 0),
                                                                  q3 = round(n * 3 / 6, 0), q4 = round(n * 4 / 6, 0),
                                                                  q5 = round(n * 5 / 6, 0), q6 = n * 1, year, date) %>% filter(year >= 1980)

results$position[results$position == "\\N"] <- NA

results$position <- as.numeric(results$position)

results <- results %>% left_join(cantidad, by = 'raceId') %>%
  mutate(
    sextil = ifelse(is.na(position), 6, cut(position, breaks = quantile(position, probs = seq(0, 1, by = 1/6), na.rm = TRUE), include.lowest = TRUE, labels = FALSE)))

results <- results %>% summarise(resultId,raceId, circuit_name = circuit_name.x,
                                 driverId, name, constructorId,constructor_name, 
                                 number, grid, position, sextil, positionText,
                                 positionOrder, points, laps, time,            
                                 milliseconds,fastestLap, rank, fastestLapTime,
                                 fastestLapSpeed, statusId, status, date = date.x, year)

# ---- Arreglamos puntos ----
# 1: 25 - 2: 18   - 3: 15 - 4: 12 - 5: 10  - 6: 8  - 7: 6  - 8: 4 -   9:2  -   10: 1 

results <- results %>% group_by(raceId) %>% summarise(resultId,raceId, circuit_name,
                                    driverId, name, constructorId,constructor_name, 
                                    number, grid, position, sextil, positionText,
                                    positionOrder, points, points_act =  case_when(
                                      (position == 1) ~ 25,
                                      (position == 2) ~ 18,
                                      (position == 3) ~ 15,
                                      (position == 4) ~ 12,
                                      (position == 5) ~ 10,
                                      (position == 6) ~ 8,
                                      (position == 7) ~ 6,
                                      (position == 8) ~ 4,
                                      (position == 9) ~ 2,
                                      (position == 10) ~ 1,
                                      (position > 10) ~ 0,
                                      (is.na(position)) ~ 0
                                    ), laps, time,            
                                    milliseconds,fastestLap, rank, fastestLapTime,
                                    fastestLapSpeed, statusId, status, date, year)


remove(circuits, constructor_results, constructor_standings, CONSTRUCTOR_ID, 
       constructors, DRIVER_ID, driver_standings, pit_stops, qualifying, 
       RACE_ID, races, seasons, sprint_results, status)

#==================== ---------- HISTÓRICOS ---------- ====================



#========== Michael Schumacher - (1992, 1993, 1994, 1995, 1996) ==========


schumacher_races <- results %>% filter(driverId == '30') %>%
  filter(year >= '1992' & year <= '1996') %>% 
  arrange(date)%>% 
  ungroup()

schumacher_races <- schumacher_races %>% summarise(mutate(schumacher_races, carreraID = row_number()), raceId, resultId,
                                                   circuit_name, driverId, name, constructorId,
                                                   constructor_name, number, grid, position, sextil,
                                                   positionText, positionOrder, points, points_act,
                                                   laps, time, milliseconds, fastestLap, rank,
                                                   fastestLapTime, fastestLapSpeed, statusId, status,
                                                   date, year)

#resumen de datos sobre las 5 temporadas
schumacher_prom <- schumacher_races %>% group_by(year) %>%
  summarise(name = c('carreras', 'median_sextil', 'wins', 'podio', 
                     'finalizadas', 'dnf', 'points_tot'),
            value = c(n(), 
                      median(sextil), 
                      sum(position == 1, na.rm = TRUE),
                      sum(position <= 3, na.rm = TRUE), 
                      sum(!is.na(position)), 
                      sum(is.na(position)), 
                      sum(points_act))) %>%
  pivot_wider(names_from = name, values_from = value)



#========== Lewis Hamilton - (2007, 2008, 2009, 2010, 2011) ==========


hamilton_races <- results %>% filter(driverId == '1') %>% 
  filter(year >= '2007' & year <= '2011') %>% 
  arrange(date) %>% 
  ungroup()

hamilton_races <- hamilton_races %>% summarise(mutate(hamilton_races, carreraID = row_number()), raceId, resultId,
                                               circuit_name, driverId, name, constructorId,
                                               constructor_name, number, grid, position, sextil,
                                               positionText, positionOrder, points, points_act,
                                               laps, time, milliseconds, fastestLap, rank,
                                               fastestLapTime, fastestLapSpeed, statusId, status,
                                               date, year)

#resumen de datos sobre las 5 temporadas
hamilton_prom <-  hamilton_races %>% group_by(year) %>%
  summarise(name = c('carreras', 'median_sextil', 'wins', 'podio', 
                     'finalizadas', 'dnf', 'points_tot'),
            value = c(n(), 
                      median(sextil), 
                      sum(position == 1, 
                          na.rm = TRUE),
                      sum(position <= 3, 
                          na.rm = TRUE), 
                      sum(!is.na(position)), 
                      sum(is.na(position)), 
                      sum(points_act))) %>%
  pivot_wider(names_from = name, values_from = value)




#========== Alain Prost - (1980, 1981, 1982, 1983, 1984) ==========



prost_races <- results %>% filter(driverId == '117') %>% 
  filter(year >= '1980' & year <= '1984') %>% 
  arrange(date) %>% 
  ungroup()

prost_races <- prost_races %>% summarise(mutate(prost_races, carreraID = row_number()), raceId, resultId,
                                         circuit_name, driverId, name, constructorId,
                                         constructor_name, number, grid, position, sextil,
                                         positionText, positionOrder, points, points_act,
                                         laps, time, milliseconds, fastestLap, rank,
                                         fastestLapTime, fastestLapSpeed, statusId, status,
                                         date, year)

#resumen de datos sobre las 5 temporadas
prost_prom <- prost_races %>% group_by(year) %>%
  summarise(name = c('carreras', 'median_sextil', 'wins', 'podio', 
                     'finalizadas', 'dnf', 'points_tot'),
            value = c(n(), 
                      median(sextil), 
                      sum(position == 1, na.rm = TRUE),
                      sum(position <= 3, na.rm = TRUE), 
                      sum(!is.na(position)), 
                      sum(is.na(position)), 
                      sum(points_act))) %>%
  pivot_wider(names_from = name, values_from = value)




#========== Sebastian Vettel - (2008, 2009, 2010, 2011, 2012) ==========



vettel_races <- results %>% filter(driverId == '20') %>% 
  filter(year >= '2008' & year <= '2012') %>% 
  arrange(date) %>% 
  ungroup()

vettel_races <- vettel_races %>% summarise(mutate(vettel_races, carreraID = row_number()), raceId, resultId,
                                           circuit_name, driverId, name, constructorId,
                                           constructor_name, number, grid, position, sextil,
                                           positionText, positionOrder, points, points_act,
                                           laps, time, milliseconds, fastestLap, rank,
                                           fastestLapTime, fastestLapSpeed, statusId, status,
                                           date, year)

#resumen de datos sobre las 5 temporadas
vettel_prom <- vettel_races %>% group_by(year) %>%
  summarise(name = c('carreras', 'median_sextil', 'wins', 'podio', 
                     'finalizadas', 'dnf', 'points_tot'),
            value = c(n(), 
                      median(sextil), 
                      sum(position == 1, na.rm = TRUE),
                      sum(position <= 3, na.rm = TRUE), 
                      sum(!is.na(position)), 
                      sum(is.na(position)), 
                      sum(points_act))) %>%
  pivot_wider(names_from = name, values_from = value)



#  ==================== ---------- PROMESA ACTUAL ---------- ====================



#========== Max Verstappen - (2017, 2018, 2019, 2020, 2021) ==========



verstappen_races <- results %>% filter(driverId == '830') %>% 
  filter(year >= '2017' & year <= '2021') %>% 
  arrange(date) %>%
  ungroup()

verstappen_races <- verstappen_races %>% summarise(mutate(verstappen_races, carreraID = row_number()), raceId, resultId,
                                                   circuit_name, driverId, name, constructorId,
                                                   constructor_name, number, grid, position, sextil,
                                                   positionText, positionOrder, points, points_act,
                                                   laps, time, milliseconds, fastestLap, rank,
                                                   fastestLapTime, fastestLapSpeed, statusId, status,
                                                   date, year)


#resumen de datos sobre las 5 temporadas
verstappen_prom <- verstappen_races %>% group_by(year) %>%
  summarise(name = c('carreras', 'median_sextil', 'wins', 'podio', 
                     'finalizadas', 'dnf', 'points_tot'),
            value = c(n(), 
                      median(sextil), 
                      sum(position == 1, na.rm = TRUE),
                      sum(position <= 3, na.rm = TRUE), 
                      sum(!is.na(position)), 
                      sum(is.na(position)), 
                      sum(points_act))) %>%
  pivot_wider(names_from = name, values_from = value)



#========== UNIÓN  ==========


temp_5 <- full_join(schumacher_races, hamilton_races) %>% 
  full_join(prost_races) %>%
  full_join(vettel_races) %>% 
  full_join(verstappen_races)

temp_5 <- temp_5 %>% group_by(name) %>% mutate(puntos_ac = cumsum(points_act))

ggplot(temp_5) + 
  geom_point(aes(x = carreraID, y = puntos_ac, color = name)) +
  geom_line(aes(x = carreraID, y = puntos_ac, color = name), size = 1) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00")) +
  labs(title = 'PUNTOS ACUMULADOS EN LAS PRIMERAS 5 TEMPORADAS (Puntuación Actual)', 
       x = 'Cantidad de carreras', 
       y = 'Suma de puntos',
       color= 'Corredor') +
  theme(text = element_text(size = 17))  # Ajusta el tamaño de la fuente


all_pilots <- results %>% group_by(name) %>% summarise(name, 
                                                       carreras=n(), 
                                                       wins = sum(position == 1, na.rm = TRUE),
                                                       podios =  sum(position <= 3, na.rm = TRUE),          
                                                       points = sum(points_act), 
                                                       finalizadas = sum(!is.na(position)), 
                                                       dnf= sum(is.na(position))) %>%
  #filter(carreras > 25 ) %>% 
  unique()

#carreras finalizadas vs victorias
#mod2 <- lm(wins ~ finalizadas + podios + points - dnf, data = all_pilots)

#add_predictions
#add_residuos

#summary(mod2)

history_5 <- all_pilots %>% filter(name %in% c("Lewis Hamilton", "Michael Schumacher", 
                                               "Alain Prost", "Sebastian Vettel", "Max Verstappen"))



#carreras totales vs victorias
ggplot(all_pilots, aes(x= carreras, y=wins)) +
  geom_point() +
  geom_point(data = history_5, aes(x=carreras, y=wins, color= name), size=5) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  geom_text(data = subset(all_pilots, wins > 31),
            aes(x = finalizadas, y = wins, label = name),
            vjust = -0.5, hjust= -0.5) +
  labs(title = 'Carreras Totales vs. Victorias Conseguidas',
       y = 'Cantidad de Victorias',
       x = 'Cantidad de Carreras Totales')



#carreras totales vs puntos totales
ggplot(all_pilots, aes(x= finalizadas, y=points)) +
  geom_point() +
  geom_point(data = history_5, aes(x=finalizadas, y=points, color= name), size=5) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  geom_text(data = subset(all_pilots, points > 1750),
            aes(x = finalizadas, y = points, label = name),
            vjust = -1)+ 
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200,250,300,350)) +
  labs(title = 'Carreras Finalizadas vs. Puntos Totales',
       y = 'Cantidad de Puntos Totales',
       x = 'Cantidad de Carreras Finalizadas')


# colores ----

#"Lewis Hamilton" = "#7B666C",
#"Michael Schumacher" = "#A00005",
#"Alain Prost" = "#1D0080",
#"Sebastian Vettel" = "#B1601A",
#"Max Verstappen" = "#32EF00"

#========== INDICES  ==========


schumacher_prom <- schumacher_prom %>% group_by() %>% summarise(corredor = "Michael Schumacher",
                                                                carreras_total = sum(carreras),
                                                                wins_total = sum(wins),
                                                                podios_total = sum(podio),
                                                                finalizadas_total = sum(finalizadas),
                                                                dnf_total = sum(dnf),
                                                                puntos_total = sum(points_tot),
                                                                porc_podio = (sum(podio) * 100) / sum(carreras),
                                                                porc_wins = (sum(wins) * 100) / sum(carreras),
                                                                porc_dnf = (sum(dnf) * 100) / sum(carreras))

hamilton_prom <- hamilton_prom %>% group_by() %>% summarise(corredor = "Lewis Hamilton",
                                                            carreras_total = sum(carreras),
                                                            wins_total = sum(wins),
                                                            podios_total = sum(podio),
                                                            finalizadas_total = sum(finalizadas),
                                                            dnf_total = sum(dnf),
                                                            puntos_total = sum(points_tot),
                                                            porc_podio = (sum(podio) * 100) / sum(carreras),
                                                            porc_wins = (sum(wins) * 100) / sum(carreras),
                                                            porc_dnf = (sum(dnf) * 100) / sum(carreras))

prost_prom <- prost_prom %>% group_by() %>% summarise(corredor = "Alain Prost",
                                                      carreras_total = sum(carreras),
                                                      wins_total = sum(wins),
                                                      podios_total = sum(podio),
                                                      finalizadas_total = sum(finalizadas),
                                                      dnf_total = sum(dnf),
                                                      puntos_total = sum(points_tot),
                                                      porc_podio = (sum(podio) * 100) / sum(carreras),
                                                      porc_wins = (sum(wins) * 100) / sum(carreras),
                                                      porc_dnf = (sum(dnf) * 100) / sum(carreras))

vettel_prom <- vettel_prom %>% group_by() %>% summarise(corredor = "Sebastian Vettel",
                                                        carreras_total = sum(carreras),
                                                        wins_total = sum(wins),
                                                        podios_total = sum(podio),
                                                        finalizadas_total = sum(finalizadas),
                                                        dnf_total = sum(dnf),
                                                        puntos_total = sum(points_tot),
                                                        porc_podio = (sum(podio) * 100) / sum(carreras),
                                                        porc_wins = (sum(wins) * 100) / sum(carreras),
                                                        porc_dnf = (sum(dnf) * 100) / sum(carreras))

verstappen_prom <- verstappen_prom %>% group_by() %>% summarise(corredor = "Max Verstappen",
                                                                carreras_total = sum(carreras),
                                                                wins_total = sum(wins),
                                                                podios_total = sum(podio),
                                                                finalizadas_total = sum(finalizadas),
                                                                dnf_total = sum(dnf),
                                                                puntos_total = sum(points_tot),
                                                                porc_podio = (sum(podio) * 100) / sum(carreras),
                                                                porc_wins = (sum(wins) * 100) / sum(carreras),
                                                                porc_dnf = (sum(dnf) * 100) / sum(carreras))

prom <- full_join(schumacher_prom, hamilton_prom) %>% full_join(prost_prom) %>%
  full_join(vettel_prom) %>% full_join(verstappen_prom)


#carreras finalizadas vs victorias
mod1 <- lm(wins_total ~ finalizadas_total + podios_total , data = prom)

summary(mod1)



#========== Plots========

#cantidad de títulos
champ <- championships %>% 
  filter(Piloto %in% c('Michael Schumacher',
                       'Lewis Hamilton', 
                       'Juan Manuel Fangio', 
                       'Alain Prost', 
                       'Sebastian Vettel', 
                       'Ayrton Senna',
                       'Niki Lauda',
                       'Max Verstappen'))

#cantidad de títulos
ggplot(champ) +
  geom_bar(aes(x = reorder(Piloto, -Títulos), y = Títulos, fill= Piloto), stat = "identity", width = 0.7) +
  geom_text(aes(x = reorder(Piloto, -Títulos), y = Títulos, label = Títulos),
            vjust = -0.4, color = "black") +
  scale_y_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8)) +
  scale_fill_manual(values = c("Lewis Hamilton" = "#7B666C",
                               "Michael Schumacher" = "#A00005",
                               "Juan Manuel Fangio" = "black",
                               "Alain Prost" = "#1D0080",
                               "Sebastian Vettel" = "#B1601A",
                               "Ayrton Senna" = "black",
                               "Niki Lauda" = "black",
                               "Max Verstappen" = "#32EF00"))+
  guides(fill = "none")+
  theme(text = element_text(size = 18)) +
  labs(title = 'Corredores de Formula 1 con más cantidad de Campeonatos',
       y = 'Cantidad de Campeonatos',
       x = 'Pilotos')

#carreras totales vs victorias
ggplot(prom) + 
  geom_point(aes(x= carreras_total, y= wins_total, color = corredor), size = 6)+ 
  geom_text(aes(x = carreras_total, y = wins_total, label = corredor),
            vjust = -1, hjust = 0.6, color = "black", , size = 5) +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  scale_y_continuous(breaks = c(16, 18, 20, 22, 24, 26, 28)) +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Totales vs. Carreras Ganadas (Primeras 5 temporadas) ',
       y = 'Carreras Ganadas',
       x = 'Carreras Totales', 
       color= 'Corredores')

ggplot(all_pilots, aes(x = carreras, y = points)) +
  geom_point() +
  geom_point(data = history_5, aes(x = carreras, y = points, color = name), size = 6) +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#000080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00")) +
  geom_text(data = subset(all_pilots, points > 1750),
            aes(x = carreras, y = points, label = name),
            vjust = -1, size = 5) +  # Ajusta el tamaño del texto
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350)) +
  geom_abline(aes(intercept = coef(mod_a)[[1]], slope = coef(mod_a)[[2]]),
              colour = "red", size = 1) +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Totales vs. Puntos Totales (En toda la carrera deportiva - Puntuación Actual)',
       y = 'Cantidad de Puntos Totales',
       x = 'Cantidad de Carreras Totales')






#comparación porc_wins
ggplot(prom) +
  geom_bar(aes(x = reorder(corredor, -porc_wins), y = porc_wins, fill= corredor), stat = "identity", width = 0.7) +
  geom_text(aes(x = reorder(corredor, -porc_wins), y = porc_wins, label = porc_wins),
            vjust = -0.4, color = "black") +
  scale_fill_manual(values = c("Lewis Hamilton" = "#7B666C",
                               "Michael Schumacher" = "#A00005",
                               "Alain Prost" = "#1D0080",
                               "Sebastian Vettel" = "#B1601A",
                               "Max Verstappen" = "#32EF00"))+
  guides(fill = "none")+
  labs(title = 'Efectividad en Victorias',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Porcentaje de Victorias',
       x = 'Pilotos')



#carreras totales vs podios
ggplot(prom) + 
  geom_point(aes(x= carreras_total, y= podios_total, color = corredor), size = 4)+ 
  geom_text(aes(x = carreras_total, y = podios_total, label = corredor),
            vjust = -1, hjust = 0.6, color = "black") +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  scale_y_continuous(breaks = c(26, 30, 35, 40,45,50,55)) +
  labs(title = 'Carreras Totales vs. Podios logrados',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Podios Logrados',
       x = 'Carreras Totales', 
       color= 'Corredores')


#comparaciòn porc_podios

ggplot(prom) +
  geom_bar(aes(x = reorder(corredor, -porc_podio), y = porc_podio, fill= corredor), stat = "identity", width = 0.7) +
  geom_text(aes(x = reorder(corredor, -porc_podio), y = porc_podio, label = porc_podio),
            vjust = -0.4, color = "black") +
  scale_fill_manual(values = c("Lewis Hamilton" = "#7B666C",
                               "Michael Schumacher" = "#A00005",
                               "Alain Prost" = "#1D0080",
                               "Sebastian Vettel" = "#B1601A",
                               "Max Verstappen" = "#32EF00"))+
  guides(fill = "none")+
  labs(title = 'Efectividad en Podios',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Porcentaje de Podios',
       x = 'Pilotos')


#carreras totales vs carreras finalizadas

ggplot(prom) + 
  geom_point(aes(x= carreras_total, y= finalizadas_total, color = corredor), size = 4)+ 
  geom_text(aes(x = carreras_total, y = finalizadas_total, label = corredor),
            vjust = -1, hjust = 0.6, color = "black") +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  scale_y_continuous(breaks = c(26, 30, 35, 40,45,50,55)) +
  labs(title = 'Carreras Totales vs. Carreras Finalizadas',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Carreras Finalizadas',
       x = 'Carreras Totales', 
       color= 'Corredores')



#carreras totales vs carreras NO finalizadas
ggplot(prom) + 
  geom_point(aes(x= carreras_total, y= dnf_total, color = corredor), size = 4)+ 
  geom_text(aes(x = carreras_total, y = dnf_total, label = corredor),
            vjust = -1, hjust = 0.6, color = "black") +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  scale_y_continuous(breaks = c(10, 15, 20, 25,30,35)) +
  labs(title = 'Carreras Totales vs. Carreras NO Finalizadas (DNF)',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Carreras NO Finalizadas (DNF)',
       x = 'Carreras Totales', 
       color= 'Corredores')



#comparaciòn porc_dnf
ggplot(prom) +
  geom_bar(aes(x = reorder(corredor, -porc_dnf), y = porc_dnf, fill= corredor), stat = "identity", width = 0.7) +
  geom_text(aes(x = reorder(corredor, -porc_dnf), y = porc_dnf, label = porc_dnf),
            vjust = -0.4, color = "black") +
  scale_fill_manual(values = c("Lewis Hamilton" = "#7B666C",
                               "Michael Schumacher" = "#A00005",
                               "Alain Prost" = "#1D0080",
                               "Sebastian Vettel" = "#B1601A",
                               "Max Verstappen" = "#32EF00"))+
  guides(fill = "none")+
  labs(title = 'Porcentaje de Carreras NO terminadas (DNF)',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Porcentaje de DNF',
       x = 'Pilotos')


#carreras totales vs puntos totales
ggplot(prom) + 
  geom_point(aes(x= carreras_total, y= puntos_total, color = corredor), size = 4)+ 
  geom_text(aes(x = carreras_total, y = puntos_total, label = corredor),
            vjust = -1, hjust = 0.6, color = "black") +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  scale_y_continuous(breaks = c( 700, 1000, 1100,1200,1300)) +
  labs(title = 'Carreras Totales vs. Cantidad de Puntos Obtenidos',
       subtitle = 'Analizamos los primeros 5 años de los pilotos seleccionados.',
       y = 'Cantidad de Puntos Obtenidos',
       x = 'Carreras Totales', 
       color= 'Corredores')




#========== Primera Victoria y Edad  ==========

edad_victoria <- data.frame(
  corredor = c("Michael Schumacher", "Lewis Hamilton", "Alain Prost", "Sebastian Vettel", "Max Verstappen"),
  primera_victoria = c(12, 6, 22, 14, 24),
  edad = c(23, 22, 26, 21, 18))

ggplot(edad_victoria) + 
  geom_point(aes(x = reorder(corredor, edad), y = edad, color= corredor),size =6) +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  geom_text(aes(x = reorder(corredor, edad), y = edad, label = corredor), vjust = -1, color = "black", size = 5) +
  geom_text(aes(x = reorder(corredor, edad), y = edad, label = primera_victoria),vjust = 2, color = "black", size = 5) +
  guides(color = "none", x = 'none')+ 
  theme(text = element_text(size = 16)) +
  labs(title = '¿Cuántos años tenian y cuánto tardaron en obtener su primera victoria?',
       y = 'Edad (en años)',
       x = 'Corredores')



#========== VERSTAPPEN VS ACTUALES ==========

#actuales sin Hamilton
actuales <- results %>% filter(year >= '2015' & year <= '2022') %>%
  group_by(name) %>% summarise(name, carreras=n(),
                               wins = sum(position == 1, na.rm = TRUE),
                               podios =  sum(position <= 3, na.rm = TRUE),
                               points = sum(points_act),
                               finalizadas = sum(!is.na(position)),
                               dnf= sum(is.na(position))) %>%
  subset( name != "Lewis Hamilton") %>%
  unique() 

max <- actuales %>% filter(name == 'Max Verstappen')


#carreras totales vs victorias ### IMPORTANTE: SE SUPRIMIÓ A LEWIS HAMILTON
ggplot(actuales, aes(x= carreras, y=wins)) +
  geom_point() + 
  geom_point(data = max, aes(x=carreras, y=wins, color= name), size=6) + 
  scale_color_manual(values = c("Max Verstappen" = "#32EF00"))+
  geom_text(data = subset(actuales, wins >= 2),
            aes(x = carreras, y = wins, label = name),vjust = -1, size = 6)+
  scale_y_continuous(breaks = c(0, 5, 10, 15, 20,25,30,35, 40 )) +
  scale_x_continuous(breaks = c(0, 25,50, 75, 100, 125, 150, 175)) +
  guides(color = "none") +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Totales vs. Victorias Conseguidas (Entre 2015 y 2022)',
       y = 'Cantidad de Victorias',
       x = 'Cantidad de Carreras Totales')


#carreras totales vs podios
ggplot(actuales, aes(x= carreras, y=podios)) +
  geom_point() +
  geom_point(data = max, aes(x=carreras, y=podios, color= name), size=6) + 
  scale_color_manual(values = c("Max Verstappen" = "#32EF00"))+
  geom_text(data = subset(actuales, podios > 6),
            aes(x = carreras, y = podios, label = name),
            vjust = -1, size = 5)+ 
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200,250,300,350)) +
  guides(color = "none") +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Totales vs. Podios Conseguidos (Entre 2015 y 2022)',
       y = 'Cantidad de Podios',
       x = 'Cantidad de Carreras Totales')




#carreras totales vs puntos totales
ggplot(actuales, aes(x= carreras, y=points)) +
  geom_point() +
  geom_point(data = max, aes(x=carreras, y=points, color= name), size=5) + 
  scale_color_manual(values = c("Max Verstappen" = "#32EF00"))+
  geom_text(data = subset(actuales, points > 300),
            aes(x = carreras, y = points, label = name),
            vjust = -1)+ 
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200,250,300,350)) +
  guides(color = "none") +
  labs(title = 'Carreras Totales vs. Puntos totales',
       subtitle = 'Estadísticas obtenidas de los pilotos entre 2015 - 2022 (Desde el comienzo de Max Verstappen), SIN HAMILTON.' ,
       y = 'Cantidad de Puntos Totales',
       x = 'Cantidad de Carreras Totales')


#========== Actuaciones Históricas ==========


# ggplot(actuaciones) +
#   geom_segment( aes(x=driver_number, xend=driver_number, y=Grid, yend=Position), color="grey") +
#   geom_point( aes(x=driver_number, y=Position), color="green", size=5 ) +
#   geom_point( aes(x=driver_number, y=Grid), color="red", size=5 ) +
#   coord_flip()+
#   #scale_y_continuous(limits = c(25, 1)) +  # Invierte el orden del eje X +
#   scale_y_continuous(breaks = c(1, 2, 3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)) +
#   
#   scale_y_continuous(breaks = c(1, 2, 3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)) +  labs(title = 'Actuaciones Estelares',
#                                                                                                               subtitle = 'Mejores carreras de los pilotos en cuanto a Rebases' ,
#                                                                                                               y = 'VALOR DE Y= POSICIONES',
#                                                                                                               x = 'VALOR DE X= CORREDORES')




#========== Violín  ==========

ggplot(temp_5) + 
  geom_violin(aes(x = name, y = position, fill = name)) + 
  scale_fill_manual(values = c("Lewis Hamilton" = "#7B666C",
                               "Michael Schumacher" = "#A00005",
                               "Alain Prost" = "#1D0080",
                               "Sebastian Vettel" = "#B1601A",
                               "Max Verstappen" = "#32EF00")) +
  scale_y_reverse(breaks = c(1, 3, 5, 10, 15), limits=c(15,1)) +
  labs(title = 'Propensidad de posición de las primeras 5 temporadas', 
       subtitle = 'Gráfico de violines mostrando en que posición solía terminar cada piloto',
       x = 'Pilotos', 
       y = 'Posición en carrera',
       color= 'Corredor')



#========== Victorias + Podios  ==========

prom_graf <- melt(prom)
prom_graf_1 <- prom_graf %>% filter(variable == 'porc_wins')
prom_graf_2 <- prom_graf %>% filter(variable == 'porc_podio')
prom_graf_a <- full_join(prom_graf_1, prom_graf_2)

ggplot(prom_graf_a,aes(x=corredor,y=value,fill=variable))+
  geom_bar(stat="identity",position="dodge") +
  geom_text(aes(x = reorder(corredor, value), y = value,
                label = paste(round(value, 2), "%")),vjust = -0.4,
            position = position_dodge(width = 0.8), size = 3.5,
            color = "black") +
  scale_fill_manual(name="", values = c(porc_podio = "#FFC300", porc_wins = "#3498DB"),
                    labels = c(porc_podio = "Podios", porc_wins = "Victorias")) +
  labs(title = "Efectividad en Victorias y Podios",
       subtitle = "Analizamos los primeros 5 años de los pilotos seleccionados.",
       y = "Porcentaje",
       x = "Pilotos") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


prom_graf_3 <- prom_graf %>% filter(variable == 'wins_total')
prom_graf_4 <- prom_graf %>% filter(variable == 'podios_total')
prom_graf_b <- full_join(prom_graf_3, prom_graf_4)


ggplot(prom_graf_b,aes(x=corredor,y=value,fill=variable))+
  geom_bar(stat="identity",position="dodge") +
  geom_text(aes(x = reorder(corredor, value), y = value,
                label = value),vjust = -0.4,
            position = position_dodge(width = 0.8), size = 3.5,
            color = "black", size = 5) +
  scale_fill_manual(name="", values = c(podios_total = "#FFC300", wins_total = "#3498DB"),
                    labels = c(podios_total = "Podios", wins_total = "Victorias")) +
  theme(text = element_text(size = 16)) +
  labs(title = "Cantidad de Victorias y Podios (Primeras 5 temporadas)",
       y = "Cantidad de Podios y Victorias",
       x = "Pilotos") 

rm(prom_graf_1, prom_graf_2, prom_graf_3, prom_graf_4)


#========== Modelado  ==========

mod_a <- lm(points ~ finalizadas, data = all_pilots)
summary(mod_a)
modelado_1 <- add_residuals(all_pilots, mod_a) %>% add_predictions( mod_a)


mod_P <- lm(puntos_ac ~ position , data = temp_5)
summary(mod_P)
modelado_P <- add_residuals(all_pilots, mod_P) %>% add_predictions( mod_P)















ggplot(all_pilots, aes(x = carreras, y = points)) +
  geom_point() +
  geom_point(data = history_5, aes(x = carreras, y = points, color = name), size = 6) +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#000080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00")) +
  geom_text(data = subset(all_pilots, points > 1750),
            aes(x = carreras, y = points, label = name),
            vjust = -1, size = 5) +  # Ajusta el tamaño del texto
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350)) +
  geom_abline(aes(intercept = coef(mod_a)[[1]], slope = coef(mod_a)[[2]]),
              colour = "red", size = 1) +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Finalizadas vs. Puntos Totales (En toda la carrera deportiva - Puntuación Actual)',
       y = 'Cantidad de Puntos Totales',
       x = 'Cantidad de Carreras Finalizadas')

mod_b <- lm(wins ~ finalizadas, data = all_pilots)
summary(mod_b)

modelado_2 <- add_residuals(all_pilots, mod_b)
modelado_2 <- add_residuals(all_pilots, mod_b) %>% add_predictions( mod_b)



mod_H <- lm(podios ~ finalizadas, data = all_pilots)
summary(mod_H)


modelado_H <- add_residuals(all_pilots, mod_H) %>% add_predictions( mod_H)



ggplot(all_pilots, aes(x= carreras, y=wins)) +
  geom_point() + 
  geom_point(data = history_5, aes(x=carreras, y=wins, color= name), size=6) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  geom_text(data = subset(all_pilots, wins > 26),
            aes(x = carreras, y = wins, label = name),vjust = -1, size = 5)+
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200,250,300,350)) +
  geom_abline(aes(intercept=coef(mod_b)[[1]], slope=coef(mod_b)[[2]]),
              colour="red", size = 1) +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Finalizadas vs. Victorias Conseguidas (En toda la carrera deportiva)',
       y = 'Cantidad de Victorias',
       x = 'Cantidad de Carreras Finalizadas')

ggplot(all_pilots, aes(x = carreras, y = points)) +
  geom_point() +
  geom_point(data = history_5, aes(x = carreras, y = points, color = name), size = 6) +
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#000080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00")) +
  geom_text(data = subset(all_pilots, points > 1750),
            aes(x = carreras, y = points, label = name),
            vjust = -1, size = 5) +  # Ajusta el tamaño del texto
  scale_x_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350)) +
  geom_abline(aes(intercept = coef(mod_a)[[1]], slope = coef(mod_a)[[2]]),
              colour = "red", size = 1) +
  theme(text = element_text(size = 16)) +
  labs(title = 'Carreras Finalizadas vs. Puntos Totales (En toda la carrera deportiva - Puntuación Actual)',
       y = 'Cantidad de Puntos Totales',
       x = 'Cantidad de Carreras Finalizadas')


#========== (Exploración de Color) ==========

ggplot(temp_5) + 
  geom_point(aes(x = carreraID, y = puntos_ac, color = name)) +
  geom_line(aes(x = carreraID, y = puntos_ac, color = name), size = 1) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#005080",
                                "Alain Prost" = "#4B1B63",
                                "Sebastian Vettel" = "#005400",
                                "Max Verstappen" = "#FA0000"))+
  labs(title = 'PUNTOS ACUMULADOS DE LAS PRIMERAS 5 TEMPORADAS', 
       subtitle = 'Acumulación de puntos de las primeras 5 temporadas (puntuación actual)',
       x = 'Cantidad de carreras', 
       y = 'Suma de puntos',
       color= 'Corredor')

ggplot(temp_5) + 
  geom_point(aes(x = carreraID, y = puntos_ac, color = name)) +
  geom_line(aes(x = carreraID, y = puntos_ac, color = name), size = 1) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7E6666",
                                "Michael Schumacher" = "#b00505",
                                "Alain Prost" = "#4B1B63",
                                "Sebastian Vettel" = "#005400",
                                "Max Verstappen" = "#00EECA"))+
  labs(title = 'PUNTOS ACUMULADOS DE LAS PRIMERAS 5 TEMPORADAS', 
       subtitle = 'Acumulación de puntos de las primeras 5 temporadas (puntuación actual)',
       x = 'Cantidad de carreras', 
       y = 'Suma de puntos',
       color= 'Corredor')

ggplot(temp_5) + 
  geom_point(aes(x = carreraID, y = puntos_ac, color = name)) +
  geom_line(aes(x = carreraID, y = puntos_ac, color = name), size = 1) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#000080",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#6E1063",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  labs(title = 'PUNTOS ACUMULADOS DE LAS PRIMERAS 5 TEMPORADAS', 
       subtitle = 'Acumulación de puntos de las primeras 5 temporadas (puntuación actual)',
       x = 'Cantidad de carreras', 
       y = 'Suma de puntos',
       color= 'Corredor')

ggplot(temp_5) + 
  geom_point(aes(x = carreraID, y = puntos_ac, color = name)) +
  geom_line(aes(x = carreraID, y = puntos_ac, color = name), size = 1) + 
  scale_color_manual(values = c("Lewis Hamilton" = "#7B666C",
                                "Michael Schumacher" = "#A00005",
                                "Alain Prost" = "#1D0080",
                                "Sebastian Vettel" = "#B1601A",
                                "Max Verstappen" = "#32EF00"))+
  labs(title = 'PUNTOS ACUMULADOS DE LAS PRIMERAS 5 TEMPORADAS', 
       subtitle = 'Acumulación de puntos de las primeras 5 temporadas (puntuación actual)',
       x = 'Cantidad de carreras', 
       y = 'Suma de puntos',
       color= 'Corredor')


